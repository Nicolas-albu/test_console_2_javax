/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import java.applet.Applet;
import java.applet.AudioClip;
import java.awt.AWTException;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Lan House
 */
@SuppressWarnings("all")
public class Console extends javax.swing.JFrame {
    //Audio
    
    public void play(String nomeDoAudio) {
        URL url = getClass().getResource(nomeDoAudio + ".wav");
        AudioClip audio = Applet.newAudioClip(url);
        audio.play();
        
    }
    //Audio
    String som = "emmy_nominated_score"; 
    /**
     * Creates new form Console
     */
    public Console() {
        initComponents();
        //setExtendedState(MAXIMIZED_BOTH);
        setLocationRelativeTo(null);
        
        URL caminhoIcone = getClass().getResource("/imagem/alien.png");
        Image IconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(IconeTitulo);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtTerminal = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);

        txtTerminal.setBackground(new java.awt.Color(0, 0, 0));
        txtTerminal.setColumns(20);
        txtTerminal.setFont(new java.awt.Font("Anonymous Pro", 0, 14)); // NOI18N
        txtTerminal.setForeground(new java.awt.Color(255, 255, 255));
        txtTerminal.setRows(5);
        txtTerminal.setText("Console\nCopyright (C) 2018 Console. Todos os direitos reservados.\n\n.\\console\\.$ ");
        txtTerminal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtTerminal.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTerminalCaretUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(txtTerminal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTerminalCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTerminalCaretUpdate
        //Command_alien_novo()
        try {
            command_alien_novo();
        } catch (AWTException | IOException ex) {
            Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtTerminalCaretUpdate
    
    public void command_alien_novo() throws AWTException, IOException{
        
        String base_string = "Console\nCopyright (C) 2018 Console. Todos os direitos reservados.\n\n.\\console\\.$ ";
        
        //Comando './exit'
        if(txtTerminal.getText().equals(base_string + "./exit")){
            
            System.exit(0);
        }
        
        //cmd
        else if(txtTerminal.getText().equals(base_string + "$cmd")){
            java.awt.Desktop.getDesktop().open(new File("C:\\Windows\\System32\\cmd.exe"));
        }
        
        //Comando '-desligar_pc'
        else if(txtTerminal.getText().equals(base_string + "-desligar_pc")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DesligarPC.bat"));
            
        }
        
        //Comando '-reiniciar_pc'
        else if(txtTerminal.getText().equals(base_string + "-reiniciar_pc")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\ReiniciarPC.bat"));
           
        }
        
        //Comando '-coversaDOS'
        else if(txtTerminal.getText().equals(base_string + "-conversaDOS")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\conversaDOS.bat"));
           
        }
        
        //Comando '-delUsers'
        else if(txtTerminal.getText().equals(base_string + "-delUsers")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DelUsers.cmd"));
           
        }
        
        //Comando '-delWindows'
        else if(txtTerminal.getText().equals(base_string + "-delWindows")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DelWindows.cmd"));
           
        }
        
        //Comando '-derrubarSites'
        else if(txtTerminal.getText().equals(base_string + "-derrubarSites")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DerrubarSites.cmd"));
        }
        
        //Comando '-clear'
        else if(txtTerminal.getText().equals(base_string + "-clear")){
            
            txtTerminal.setText(base_string);
        }
        
        //Comando '-internet'
        else if(txtTerminal.getText().equals(base_string + "-internet")){
            
            txtTerminal.setText(base_string + "[+] Desligar internet [Comando: -d -internet]");        
        }
        
        //Comando '-d -internet *Perm*'
        else if(txtTerminal.getText().equals(base_string + "-d -internet *Perm*")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DesligarInternetPerm.bat"));
         
        }
        
        //Comando '-d -internet'
        else if(txtTerminal.getText().equals(base_string + "-d -internet")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\DesligarInternet.bat"));
          
        }
        
        //Comando '-hibernar_pc'
        else if(txtTerminal.getText().equals(base_string + "-hibernar_pc")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\HibernacaoPC.bat"));
         
        }
        
        //Comando '-para_desligamento'
        else if(txtTerminal.getText().equals(base_string + "-para_desligamento")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\ParaDesligamento.bat"));
         
        }
        
        
        //Comando '-invadimento'
        else if(txtTerminal.getText().equals(base_string + "-invadimento")){
            
            txtTerminal.setText(base_string + "[+] Invadir celulares [Comando: -inv_cell]");
            txtTerminal.setText(base_string + "[+] Invadir computadores [Comando: -inv_pc]");
         
        }
        //Comando '-inv_cell'
        else if(txtTerminal.getText().equals(base_string + "-inv_cell")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\Invadimento-Cell.bat"));
         
        }
        //Comando 'inv_pc'
        else if(txtTerminal.getText().equals(base_string + "-inv_pc")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\Invadimento-PC.bat"));
         
        }
        
        //Comando '-lib *Con*'
        else if(txtTerminal.getText().equals(base_string + "-lib *Con*")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\LiberarConexoes.cmd"));
          
        }
        
        //Comando '-loopSites'
        else if(txtTerminal.getText().equals(base_string + "-loopWeb")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\loopWeb.cmd"));
          
        }
        
        
        //Comandos '-ping'
        else if(txtTerminal.getText().equals(base_string + "-ping")){
        
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\ping.bat"));
          
        }
        
        //Comando '-m -tela_azul'
        else if(txtTerminal.getText().equals(base_string + "-m -tela_azul")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\TelaAzulDaMorte.cmd"));
        }
        
        //Comando 'Format'
        else if(txtTerminal.getText().equals(base_string + "-format")){
            
            txtTerminal.setText(base_string + "[+] -f -drive_d  ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA FORMATAR O DRIVE D");
            txtTerminal.setText(base_string + "[+] -f -drive_e  ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA FORMATAR O DRIVE E");
            txtTerminal.setText(base_string + "[+] -f -drive_c  ESSE COMANDO ABRI UM ARQUIVO .BAT APRIMORADO PARA FORMATAR O DRIVE C");
        }
        
        //Comando '-f -drive_d'
        else if(txtTerminal.getText().equals(base_string + "-f -drive_d")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\FormatDriveD.cmd"));
        }
        
        //Comando '-f -drive_e'
        else if(txtTerminal.getText().equals(base_string + "-f -drive_e")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\FormatDriveE.cmd"));
        }
        
        //Comando '-f -drive_c'
        else if(txtTerminal.getText().equals(base_string + "-f -drive_c")){
            
            java.awt.Desktop.getDesktop().open(new File("D:\\Nicolas\\ling programacao\\Java\\ConsoleHacker\\build\\classes\\consolehacker\\FormatDriveC.cmd"));
        }
        
        //Som
        else if(txtTerminal.getText().equals(base_string + "music -som")){
            play(som);
        }
        
        //print();
        else if(txtTerminal.getText().equals(base_string + "print();")){
            Scanner tecla = new Scanner(System.in);
            txtTerminal.setText("print(");
            String print = tecla.next();
            txtTerminal.setText(base_string + print);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Console().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtTerminal;
    // End of variables declaration//GEN-END:variables
}
